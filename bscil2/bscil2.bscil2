L4D
W
L5A
W
//TODO print out the rest of the program start
L00
W
L00
W
R   <OP>
D
L4C 'L'
N35 to next DUP
L1F CIL op: ldc.i4.s
W
R   through the next write reads two hex digits and outputs a byte
LD0 -0x30
A   0-9 -> 0-9; A-F -> 17-22
D
L0A 
E03  skip subtraction if digit is less than 10 (top of stack)
LF9 
A    -= 7 (A should be at 10 but is at 17)
L10  
M    *= 16
R    ditto to read next digit
LB8
A
D
L0A
E03
LF9
A
A    16*digit + digit
W
B0A020000 to <END-OP>
D
L44 'D'
N0C    to next DUP
L25 CIL op: dup
W
BF9010000 to <END-OP>
D
L50 'P'
N0C    to next DUP
L26 CIL op: pop
W
BE8010000 to <END-OP>
D
L54 'T'
N0C    to next DUP
L26 CIL op: ret
W
BD7010000 to <END-OP>
D
L45 'E'
N35 to next DUP
L32 CIL op: blt.s
W 
R   two hex characters to byte
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A 
W
B9D010000 to <END-OP>
D
L4E 'N'
N35 to next DUP
L33 CIL op: bne.s
W   
R   two hex characters to byte
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A 
W
B63010000 to <END-OP>
D
L42 'B'
N05     to full-size branch to next DUP
B05000000 skip over next branch
BB0000000 to next DUP
L38 CIL op: br
W   
R   two hex characters to byte #1
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A
W   
R   two hex characters to byte #2
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A
W   
R   two hex characters to byte #3
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A
W   
R   two hex characters to byte #4
LD0 
A   
D
L0A 
E03 
LF9 
A   
L10 
M   
R   
LB8
A
D
L0A
E03
LF9
A
A
W
BA4000000 to <END-OP>
D
L41 'A'
N0C    to next DUP
L26 CIL op: add
W
B93000000 to <END-OP>
D
L4D 'M'
N0C    to next DUP
L26 CIL op: mull
W
B82000000 to <END-OP>
D
L52 'R'
N28 to next DUP
L28 CIL op: call
W
L01 output 0x06000001
W
L00
W
L00
W
L06
W
B55000000 to <END-OP>
D
L57 'W'
N28 to next DUP
L28 CIL op: call
W
L02 output 0x06000002
W
L00
W
L00
W
L06
W
B28000000 to <END-OP>
D
L46 'F'
N32 to <FINISH>
L28 CIL op: call
W
L03 output 0x06000003
W
L00
W
L00
W
L06
W fall into END-OP
P  <END-OP>
R  <COMMENT>
L0A '\n'
NF7      to <COMMENT>
BA8FDFFFF back to <OP>
P  <FINISH>
F
L42
W
L53
W
//TODO print out the rest of the program end
L00
W
L00
W
T